{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/img/vs_b.png","path":"img/vs_b.png","modified":1},{"_id":"source/img/vs_a.png","path":"img/vs_a.png","modified":1},{"_id":"source/img/vmware-lock.png","path":"img/vmware-lock.png","modified":1},{"_id":"source/img/vmware-list.png","path":"img/vmware-list.png","modified":1},{"_id":"source/img/cmder.png","path":"img/cmder.png","modified":1},{"_id":"themes/coney/source/js/jquery-2.1.0.min.js","path":"js/jquery-2.1.0.min.js","modified":1},{"_id":"themes/coney/source/img/s0.png","path":"img/s0.png","modified":1},{"_id":"themes/coney/source/img/logo.svg","path":"img/logo.svg","modified":1},{"_id":"themes/coney/source/img/favicon.ico","path":"img/favicon.ico","modified":1},{"_id":"themes/coney/source/img/dots-2x.png","path":"img/dots-2x.png","modified":1},{"_id":"themes/coney/source/img/coney.png","path":"img/coney.png","modified":1},{"_id":"themes/coney/source/img/author.jpg","path":"img/author.jpg","modified":1},{"_id":"themes/coney/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":1},{"_id":"themes/coney/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":1},{"_id":"themes/coney/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":1},{"_id":"themes/coney/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":1},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":1},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":1},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":1},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":1},{"_id":"themes/coney/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":1},{"_id":"themes/coney/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1},{"_id":"themes/coney/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1},{"_id":"themes/coney/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1},{"_id":"themes/coney/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1},{"_id":"themes/coney/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1},{"_id":"themes/coney/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1},{"_id":"themes/coney/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1},{"_id":"themes/coney/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1},{"_id":"themes/coney/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1},{"_id":"themes/coney/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1},{"_id":"themes/coney/source/css/style.styl","path":"css/style.styl","modified":1}],"Cache":[{"_id":"source/_posts/Cmder.md","shasum":"e09ccdab469217f465930af5e2c8ae0adf6cb45c","modified":1434018115907},{"_id":"source/_posts/Common.md","shasum":"f7c1f2974c1a218a5983841656ad8fab3f256fe2","modified":1434027447646},{"_id":"source/_posts/Cuckoo-1.md","shasum":"4d5036f1f9f95c4893b3e1549aa9d7d9d4cbc114","modified":1434199507932},{"_id":"source/_posts/Hello-World.md","shasum":"6654746ea13ca4f363455a0c8d72cd02e3036250","modified":1431879933939},{"_id":"source/_posts/Mac.md","shasum":"d063f2f882ce2c0e3c980e3aaff73f1b1f1cb241","modified":1431879933939},{"_id":"source/_posts/Mactype.md","shasum":"6b42f3c8075daae81633b42d43b872cd66a3a557","modified":1431879933939},{"_id":"source/_posts/Node-Development.md","shasum":"2ed05a15d8e8af16ee01a15ae4bc7e22e3d14c60","modified":1431879933939},{"_id":"source/_posts/Sandbox.md","shasum":"707c77a8256788411a7d313cf63ffdf3b5f39327","modified":1434198697983},{"_id":"source/_posts/Node-Start.md","shasum":"e15d5cb84b56dbc65fd195d03ec62d6e46a02198","modified":1431879933939},{"_id":"source/_posts/Scrapy.md","shasum":"4077b4de0692e79aca40b83c07438fc58ac18b29","modified":1431879933939},{"_id":"source/_posts/Target.md","shasum":"d5a5cc36082602478bd2e4be33c80f961fa43651","modified":1431879933939},{"_id":"source/_posts/KaliLinux.md","shasum":"2c67d51a6b5cc39ec1e965aecab5972114b621c5","modified":1431879933939},{"_id":"source/_posts/Install-Arch-Linux.md","shasum":"ea2d248fdb30a37e68f859f9f2f9f09f1e176ec3","modified":1431879933939},{"_id":"source/img/vmware-lock.png","shasum":"2c42a00c7b5311138e03f3fc58a1109c2e31678a","modified":1431879933942},{"_id":"source/img/vmware-list.png","shasum":"bd4e2db3f79faa01b355aa305b571a72edb17ccb","modified":1431879933939},{"_id":"source/img/vs_b.png","shasum":"9577c1139e613daf1644a1cbe4be82aa66a78980","modified":1431879933942},{"_id":"source/_posts/Url-Leak.md","shasum":"f5cd6338862604fda83c0711927a4aa1af9fe1ed","modified":1431879933939},{"_id":"source/img/vs_a.png","shasum":"126a13162f2db9976281ec8bb9157686abeecba5","modified":1431879933942},{"_id":"source/img/cmder.png","shasum":"5280ec1941a17feeafe522fa0726338469000e51","modified":1431879933939},{"_id":"themes/coney/LICENSE","shasum":"a12a2dc681f818facc310fa916aa5fd17c781aa6","modified":1431879933942},{"_id":"themes/coney/_config.yml","shasum":"d9735817d803b6a72e9603021095078eab68151e","modified":1431879933942},{"_id":"themes/coney/languages/default.yml","shasum":"7e9594aa9551cd4841905b4b4d4fcabc2b40e447","modified":1431879933942},{"_id":"themes/coney/languages/zh-TW.yml","shasum":"48b652fa2eb73f9f7cd512472d0cb20057152aea","modified":1431879933942},{"_id":"themes/coney/languages/zh-CN.yml","shasum":"5999f2a463e3b597fdb7190f7092283e4f1918fe","modified":1431879933942},{"_id":"themes/coney/README.md","shasum":"34d4db9e0bb3846ff3db6183a687e6999e57a5b6","modified":1431879933942},{"_id":"themes/coney/layout/_partial/after_footer.ejs","shasum":"ef4fa27cac7626b7e8052e737af31cb7d0e1cd16","modified":1431879933942},{"_id":"themes/coney/layout/_partial/article.ejs","shasum":"64fb413b46ed1d4823e0a0fb6e719e358950fc14","modified":1431879933942},{"_id":"themes/coney/layout/_partial/archive.ejs","shasum":"aa3e66bb3b0249460ecc96ca9787c7e2f8e736b5","modified":1431879933942},{"_id":"themes/coney/layout/_partial/categories.ejs","shasum":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1431879933942},{"_id":"themes/coney/layout/_partial/footer.ejs","shasum":"e65cfcb8241d740b485ae6e399e98111d475ff99","modified":1431879933942},{"_id":"themes/coney/layout/_partial/google_analytics.ejs","shasum":"b6871f67c87c87acb5295ce4fb673b16a7296a01","modified":1431879933942},{"_id":"themes/coney/layout/_partial/baidu_analytics.ejs","shasum":"752a2966eed9effd5bb495cc19a90f0a751a6bff","modified":1431879933942},{"_id":"themes/coney/layout/_partial/head.ejs","shasum":"8dbc801a32a66da224e75ea97ce2baa1791ab306","modified":1431879933942},{"_id":"themes/coney/layout/_partial/pagination.ejs","shasum":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1431879933945},{"_id":"themes/coney/layout/_partial/header.ejs","shasum":"cf03bc496ec3e55ba11b47958b0c0b69ed72eecf","modified":1431879933942},{"_id":"themes/coney/layout/_partial/post/article.ejs","shasum":"ec5e8f66886dedf35b9a5746d11fe0dc4a7ab68f","modified":1431879933945},{"_id":"themes/coney/layout/_partial/post/catetags.ejs","shasum":"f6b107078094333b6567d4a97700f559159675e1","modified":1431879933945},{"_id":"themes/coney/layout/_partial/post/comment.ejs","shasum":"0c9351ed537e19657d63d528d793bf1124424037","modified":1431879933945},{"_id":"themes/coney/layout/_partial/post/footer.ejs","shasum":"a9aeae612eb7085bbe74bd12086198320e6c3702","modified":1431879933945},{"_id":"themes/coney/layout/_partial/post/gallery.ejs","shasum":"7ca5b1db9439be61a8b77f6f7d857b56fdf1517f","modified":1431879933945},{"_id":"themes/coney/layout/_partial/post/jiathis.ejs","shasum":"adc047d2bbd031092df86f3be2866ea9c3b5f3c9","modified":1431879933945},{"_id":"themes/coney/layout/_partial/post/pagination.ejs","shasum":"dd9563aaa7094c7082a16e6c9cbc24b33aaef87c","modified":1431879933945},{"_id":"themes/coney/layout/_partial/search.ejs","shasum":"aed90406246cc43f60dda8cd6558e9eccee342a4","modified":1431879933945},{"_id":"themes/coney/layout/_partial/post/header.ejs","shasum":"73aa8a410cc80277930acaec23003c30eeac6d79","modified":1431879933945},{"_id":"themes/coney/layout/_partial/sidebar.ejs","shasum":"3298799a7c787164f4efadeed24f33d92cbcc9da","modified":1431879933945},{"_id":"themes/coney/layout/_partial/tags.ejs","shasum":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1431879933945},{"_id":"themes/coney/layout/_widget/archive.ejs","shasum":"07443d9617611d51caba34d3b536ff34c4ecde5e","modified":1431879933945},{"_id":"themes/coney/layout/_widget/links.ejs","shasum":"210f9464d94fd9174a36b75b3ffe35e8493b6ce7","modified":1431879933945},{"_id":"themes/coney/layout/_widget/category.ejs","shasum":"9b4cc6be18aa6c5da4cf45913d5be83fc33081db","modified":1431879933945},{"_id":"themes/coney/layout/_widget/recent_comments.ejs","shasum":"3a475f29c4fa7dcb1bea0c0b8aa645fad2db168f","modified":1431879933945},{"_id":"themes/coney/layout/_widget/recent_posts.ejs","shasum":"95085ee0c58a9d9ee1c1465681211763225aa4e9","modified":1431879933945},{"_id":"themes/coney/layout/_widget/tag.ejs","shasum":"cc97db230f727c27519298166ad904358811fb53","modified":1431879933945},{"_id":"themes/coney/layout/_widget/rss.ejs","shasum":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1431879933945},{"_id":"themes/coney/layout/_widget/tagcloud.ejs","shasum":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1431879933945},{"_id":"themes/coney/layout/index.ejs","shasum":"cbca1720a7e4c94233e17b45f0b46ab4fac5b765","modified":1431879933945},{"_id":"themes/coney/layout/archive.ejs","shasum":"b4fd8369c1480e4ad283be5947648630e8e7cc01","modified":1431879933945},{"_id":"themes/coney/layout/category.ejs","shasum":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1431879933945},{"_id":"themes/coney/layout/layout.ejs","shasum":"8370535f4410499e3038c3592a9151f9b845ba80","modified":1431879933945},{"_id":"themes/coney/layout/page.ejs","shasum":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1431879933945},{"_id":"themes/coney/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1431879933945},{"_id":"themes/coney/layout/post.ejs","shasum":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1431879933945},{"_id":"themes/coney/layout/tag.ejs","shasum":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1431879933945},{"_id":"themes/coney/package.json","shasum":"00357ef6f24eb049074da81809e98f973f528cca","modified":1431879933945},{"_id":"themes/coney/source/css/_base/font.styl","shasum":"75f264bc742888dbe192e8d19eda70705d13c709","modified":1431879933945},{"_id":"themes/coney/source/css/_base/code.styl","shasum":"330209ebaebe69308e131fada85b9b619c85fbd9","modified":1431879933945},{"_id":"themes/coney/source/css/_base/public.styl","shasum":"29deec49b60533cc4196175345eaa4b2d611a97e","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/aside.styl","shasum":"d0d8f68cae0dd59d34b5f1f470acf573b166d4de","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/article.styl","shasum":"82d7621920e221b7e52dfdb74cbcec718d0cc666","modified":1431879933945},{"_id":"themes/coney/source/css/_base/variable.styl","shasum":"d80a6cc227afa2f5feb868c31508ad402dd9d3ae","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/body","shasum":"fa69096f3705f05690a694c697bd61a457849e42","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/footer.styl","shasum":"a84eba588408c654777f675df8bb2eb60a5d0f1c","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/duoshuo.styl","shasum":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/helper.styl","shasum":"52d4ee51b7087c2c2a7e7ded6f63270165d9de89","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/gallery.styl","shasum":"a544a58fdb4c8dd8274159323abd1e38cb03215e","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/header.styl","shasum":"44d71f8c3eec980772761bbc08c3ecaefe0be677","modified":1431879933945},{"_id":"themes/coney/source/css/_partial/index.styl","shasum":"f1e6b8843bfe1a7fbdcf018e95780b819aa32ab3","modified":1431879933945},{"_id":"themes/coney/source/css/style.styl","shasum":"c9677bc3c9544a46b7f782b4191e4f54d8ead1a3","modified":1431879933945},{"_id":"themes/coney/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1431879933945},{"_id":"themes/coney/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1431879933945},{"_id":"themes/coney/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1431879933945},{"_id":"themes/coney/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1431879933945},{"_id":"themes/coney/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1431879933945},{"_id":"themes/coney/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1431879933945},{"_id":"themes/coney/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1431879933945},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1431879933945},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1431879933945},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1431879933945},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1431879933945},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1431879933945},{"_id":"themes/coney/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1431879933945},{"_id":"themes/coney/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1431879933945},{"_id":"themes/coney/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1431879933945},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.eot","shasum":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1431879933949},{"_id":"themes/coney/source/font/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1431879933945},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.ttf","shasum":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1431879933949},{"_id":"themes/coney/source/font/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1431879933949},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.woff","shasum":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1431879933949},{"_id":"themes/coney/source/font/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1431879933952},{"_id":"themes/coney/source/img/author.jpg","shasum":"5d53bfe75d7aa0b4c49c4e1343a2410b3985f9f9","modified":1431879933952},{"_id":"themes/coney/source/img/coney.png","shasum":"2988bf2f10477ef8aa86fcae0d21790d7afebfba","modified":1431879933952},{"_id":"themes/coney/source/img/logo.svg","shasum":"0eb0ae32d95c6f0b14adb9ab491775dcd1da3af3","modified":1431879933952},{"_id":"themes/coney/source/img/favicon.ico","shasum":"0c57dd7d0944b74be20dc99f1e6f77362ba0ed24","modified":1431879933952},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.svg","shasum":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1431879933949},{"_id":"themes/coney/source/font/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1431879933952},{"_id":"themes/coney/source/img/s0.png","shasum":"4ae37d411642a1f21ce875280873cb35a4aff966","modified":1431879933952},{"_id":"themes/coney/source/img/dots-2x.png","shasum":"2d900f9f8a0b53067401138d8cb411c83e747e8e","modified":1431879933952},{"_id":"themes/coney/source/js/jquery-2.1.0.min.js","shasum":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f","modified":1431879933952},{"_id":"themes/coney/source/font/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1431879933949}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Cmder","date":"2015-03-21T07:34:12.000Z","_content":"\n## Cmder简介\n\nCmder是一款Windows下面的终端模拟器，有了它终于能够抛弃默认的垃圾cmd界面了！\n\n![Cmder](/img/cmder.png)\n\n### 特点\n\n个人很简单的使用了下，觉得有以下优点：\n\n1. 可自定义字体，配色非常好看。\n\n2. 路径补全有所提高。\n\n## 使用配置\n\n### 乱码\n\nls的乱码主要是参数问题，修改文件cmder/config/aliases：\n\n```\nl=ls --show-control-chars\nla=ls -aF --show-control-chars\nll=ls -alF --show-control-chars\nls=ls --show-control-chars -F\n```\n\n### 中文重叠\n\n在设置中，取消`Main console font`下的Monospace勾，这样中文字符（占用两个英文字符空间）就得到的了足够的空间了。\n\n### 右键打开Cmder\n\n以管理员权限运行，输入命令`.\\cmder.exe /REGISTER ALL`，在任意目录下右击就会出现`Cmder Here`，可以打开并默认切换到该目录。\n\n### 退格后错位\n\n> [lgh](https://www.v2ex.com/member/lgh):\n> cmder 功能强大，但是反应较慢，经常卡住半天才反应；默认的命令提示符 λ 还会导致在用 TAB 还是 BACKSPACE 之后字符错位（自己改配置换成 $ 后就不会）。\n> 现在干脆直接用 ConEmu 了。\n> 来源：https://www.v2ex.com/t/155058\n\nlgh针对问题1提出解决方法是修改提示符为$。修改方法是\n\n打开文件config/prompt.lua，将第二行中的λ修改为Linux下常用的$\n\n## 不足\n\n当然，可能这些问题只是因为我没有找到对应的解决方法。\n\n1. <del>有时候会出现无法删除第一个字符的情况（实际已经删除了）。</del>\n\n2. 路径补全还是没有达到zsh的效果。\n\n3. 没有快速进入某个目录的功能。\n\n4. Cmder1.2开始需要VS**2015**运行库支持（丧心病狂！）\n\n## 最后\n\n现在只是刚开始使用，很多功能还是在摸索中，如果有更多的体会，会继续更新。\n","source":"_posts/Cmder.md","raw":"title: \"Cmder\"\ndate: 2015-03-21 15:34:12\ntags:\n---\n\n## Cmder简介\n\nCmder是一款Windows下面的终端模拟器，有了它终于能够抛弃默认的垃圾cmd界面了！\n\n![Cmder](/img/cmder.png)\n\n### 特点\n\n个人很简单的使用了下，觉得有以下优点：\n\n1. 可自定义字体，配色非常好看。\n\n2. 路径补全有所提高。\n\n## 使用配置\n\n### 乱码\n\nls的乱码主要是参数问题，修改文件cmder/config/aliases：\n\n```\nl=ls --show-control-chars\nla=ls -aF --show-control-chars\nll=ls -alF --show-control-chars\nls=ls --show-control-chars -F\n```\n\n### 中文重叠\n\n在设置中，取消`Main console font`下的Monospace勾，这样中文字符（占用两个英文字符空间）就得到的了足够的空间了。\n\n### 右键打开Cmder\n\n以管理员权限运行，输入命令`.\\cmder.exe /REGISTER ALL`，在任意目录下右击就会出现`Cmder Here`，可以打开并默认切换到该目录。\n\n### 退格后错位\n\n> [lgh](https://www.v2ex.com/member/lgh):\n> cmder 功能强大，但是反应较慢，经常卡住半天才反应；默认的命令提示符 λ 还会导致在用 TAB 还是 BACKSPACE 之后字符错位（自己改配置换成 $ 后就不会）。\n> 现在干脆直接用 ConEmu 了。\n> 来源：https://www.v2ex.com/t/155058\n\nlgh针对问题1提出解决方法是修改提示符为$。修改方法是\n\n打开文件config/prompt.lua，将第二行中的λ修改为Linux下常用的$\n\n## 不足\n\n当然，可能这些问题只是因为我没有找到对应的解决方法。\n\n1. <del>有时候会出现无法删除第一个字符的情况（实际已经删除了）。</del>\n\n2. 路径补全还是没有达到zsh的效果。\n\n3. 没有快速进入某个目录的功能。\n\n4. Cmder1.2开始需要VS**2015**运行库支持（丧心病狂！）\n\n## 最后\n\n现在只是刚开始使用，很多功能还是在摸索中，如果有更多的体会，会继续更新。\n","slug":"Cmder","published":1,"updated":"2015-06-11T10:21:55.907Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eymw0000uwfhb40y4pz7"},{"title":"网址泄漏","date":"2015-01-03T06:37:26.000Z","_content":"\n这个题目起的有点意思。起因很简单，在元旦假期里面突然想折腾一下ArchLinux，装一个Vmware，结果去官网，发现我的Vmware帐号提示处于下载资格审核中，没法直接通过官网下载，而偏偏Vmware Workstation for Linux的下载非常少，或者版本不是最新的（最新的11没有32位版，其他的也普遍是8、9等），后来终于找到一个比较新的[下载地址](http://www.cnblogs.com/zc520/p/3302629.html)（10.0.0），里面提供了10.0.0的官网下载链接：\n\n![Vmware Account Locked](/img/vmware-lock.png)\n\n[http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.0-1295980.i386.bundle](http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.0-1295980.i386.bundle)\n\n虽然离最新可用32位版10.0.4稍微差点，但仍然是可用的。不过仔细观察这个链接，中间不包含任何随机字符串，因此怀疑可以构造出10.0.4的下载地址。在这个链接中最关键的就是bundle的文件名：VMware-Workstation-Full-10.0.0-1295980.i386.bundle，于是便想直接修改为VMware-Workstation-Full-10.0.4-1295980.i386.bundle，显然这种做法是错误的，因为文件名中含有一个内部版本号1295980，因此必须找到这个内部版本号才能够构造出实际的10.0.4下载地址。\n\n仔细观察[官网下载页面内容](https://my.vmware.com/group/vmware/details?downloadGroup=WKST-1004-LX&productId=362&rPId=7049#errorCheckDiv)，发现真实文件名（内部版本号）在官网上就有，据此构造出实际的10.0.4的下载地址为：\n\n[http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.4-2249910](http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.4-2249910.i386.bundle)\n\n![Vmware List](/img/vmware-list.png)\n\n## 其他的话\n\n这也不是我第一次干这种事了，基本情况就是下载网址A被大家所知道，但是下载网址B需要通过一定权限才能获取的，然后最关键的是，网址A能够推理出网址B，通常情况下网址里面包含了固定的信息，例如日期，可以直接修改得到。当然，如果有一点随机字符串，就没法获得了。\n\n这个问题相信以前国内的各种下载站都会有过，不过现在应该好多了，但是很多公司自己的软件或者付费下载可能仍然存在这样的问题。如果能够获得一个网址，例如试用版软件或者免费资源，就能够进一步推导出其他资源的网址，当然前提是文件名能够直接从网页上获取到。\n\n## 安装Vmware Workstation中的其他问题\n\n参考了很多[Wiki](https://wiki.archlinux.org/index.php/Vmware)上的内容\n\n#### 无/etc/init.d目录\n\nArchlinux的启动改为systemctl，因此不再有/etc/init.d目录，解决方法是直接忽略错误，然后手工写一个service文件就行了。\n\n#### 编译模块时出错\n\n1. 缺少header.h\n\n查看日志，发现是缺少linux头文件中的header.h，利用locate命令查找到对应的version.h文件，然后创建软链接\n\n`sudo ln /usr/include/linux/version.h /lib/modules/3.17.6-1-ARCH/build/include/linux/version.h`\n\n2. 打补丁\n\n解决了header.h之后，发现还是编译不通过，这下就傻眼了（本事不济搞不定啊！），不过通过搜索后，发现其实Arch Wiki上都写明了，安装软件[vmware-patch](https://aur.archlinux.org/packages/vmware-patch/)就行了，一看这个软件，就已经为10.0.4更新过了，**又让我对Arch产生了进一步的好感，无所不能啊！**\n\n总结就是，有问题，搜**Arch Linux英文Wiki！**\n","source":"_posts/Url-Leak.md","raw":"title: 网址泄漏\ndate: 2015-01-03 14:37:26\ntags:\n---\n\n这个题目起的有点意思。起因很简单，在元旦假期里面突然想折腾一下ArchLinux，装一个Vmware，结果去官网，发现我的Vmware帐号提示处于下载资格审核中，没法直接通过官网下载，而偏偏Vmware Workstation for Linux的下载非常少，或者版本不是最新的（最新的11没有32位版，其他的也普遍是8、9等），后来终于找到一个比较新的[下载地址](http://www.cnblogs.com/zc520/p/3302629.html)（10.0.0），里面提供了10.0.0的官网下载链接：\n\n![Vmware Account Locked](/img/vmware-lock.png)\n\n[http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.0-1295980.i386.bundle](http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.0-1295980.i386.bundle)\n\n虽然离最新可用32位版10.0.4稍微差点，但仍然是可用的。不过仔细观察这个链接，中间不包含任何随机字符串，因此怀疑可以构造出10.0.4的下载地址。在这个链接中最关键的就是bundle的文件名：VMware-Workstation-Full-10.0.0-1295980.i386.bundle，于是便想直接修改为VMware-Workstation-Full-10.0.4-1295980.i386.bundle，显然这种做法是错误的，因为文件名中含有一个内部版本号1295980，因此必须找到这个内部版本号才能够构造出实际的10.0.4下载地址。\n\n仔细观察[官网下载页面内容](https://my.vmware.com/group/vmware/details?downloadGroup=WKST-1004-LX&productId=362&rPId=7049#errorCheckDiv)，发现真实文件名（内部版本号）在官网上就有，据此构造出实际的10.0.4的下载地址为：\n\n[http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.4-2249910](http://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-10.0.4-2249910.i386.bundle)\n\n![Vmware List](/img/vmware-list.png)\n\n## 其他的话\n\n这也不是我第一次干这种事了，基本情况就是下载网址A被大家所知道，但是下载网址B需要通过一定权限才能获取的，然后最关键的是，网址A能够推理出网址B，通常情况下网址里面包含了固定的信息，例如日期，可以直接修改得到。当然，如果有一点随机字符串，就没法获得了。\n\n这个问题相信以前国内的各种下载站都会有过，不过现在应该好多了，但是很多公司自己的软件或者付费下载可能仍然存在这样的问题。如果能够获得一个网址，例如试用版软件或者免费资源，就能够进一步推导出其他资源的网址，当然前提是文件名能够直接从网页上获取到。\n\n## 安装Vmware Workstation中的其他问题\n\n参考了很多[Wiki](https://wiki.archlinux.org/index.php/Vmware)上的内容\n\n#### 无/etc/init.d目录\n\nArchlinux的启动改为systemctl，因此不再有/etc/init.d目录，解决方法是直接忽略错误，然后手工写一个service文件就行了。\n\n#### 编译模块时出错\n\n1. 缺少header.h\n\n查看日志，发现是缺少linux头文件中的header.h，利用locate命令查找到对应的version.h文件，然后创建软链接\n\n`sudo ln /usr/include/linux/version.h /lib/modules/3.17.6-1-ARCH/build/include/linux/version.h`\n\n2. 打补丁\n\n解决了header.h之后，发现还是编译不通过，这下就傻眼了（本事不济搞不定啊！），不过通过搜索后，发现其实Arch Wiki上都写明了，安装软件[vmware-patch](https://aur.archlinux.org/packages/vmware-patch/)就行了，一看这个软件，就已经为10.0.4更新过了，**又让我对Arch产生了进一步的好感，无所不能啊！**\n\n总结就是，有问题，搜**Arch Linux英文Wiki！**\n","slug":"Url-Leak","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eyng0001uwfhkrwlvj3b"},{"title":"个人学习目标","date":"2015-04-19T16:00:37.000Z","_content":"\n部门老大让我们定下自己的年度目标，以此使大家在一段时间都能够有所收获而不至于碌碌无为。作为新人，我的年度目标自然时是以学习为主，主要是读书、写博客，提高个人时间管理。\n\n## SMART原则\n\nSMART原则是制定（考核）目标时常用的黄金原则，老大在会议上也提到了。\n\n1. Specific明确性\n\n目标是具体无歧义，对于团队而言则是一致的。\n\n2. Measuable可衡量性\n\n有简单明显的指标衡量完成进度及效果\n\n3. Attainable可达到的\n\n目标不宜过于难，以免位居不前。\n\n4. Relevant相关性\n\n目标之间有相关性，这条对于此次目标制定用处不大。\n\n5. Time-bound时间截至期限\n\n有明确的截至日期，其实这和原则2有部分重复\n\n## 个人年度目标\n\n鉴于自己的严重拖延症及极差的执行力，尽量把目标定低一些，以便达到。\n\n### 总目标\n\n1. 技术类书籍平均每天3页，一周20页，两个月写一篇读书笔记。\n\n2. 一周一篇博客。\n\n3. 每天利用Evernote记录自己做的事情，并尝试总结改进。\n\n### 4月份目标\n\n1. 即日起（19日）至月底月度完毕《Effictive C++》前两个章节。\n\n2. 整理现有的博客内容，写博客一篇。\n\n","source":"_posts/Target.md","raw":"title: \"个人学习目标\"\ndate: 2015-04-20 00:00:37\ntags:\n---\n\n部门老大让我们定下自己的年度目标，以此使大家在一段时间都能够有所收获而不至于碌碌无为。作为新人，我的年度目标自然时是以学习为主，主要是读书、写博客，提高个人时间管理。\n\n## SMART原则\n\nSMART原则是制定（考核）目标时常用的黄金原则，老大在会议上也提到了。\n\n1. Specific明确性\n\n目标是具体无歧义，对于团队而言则是一致的。\n\n2. Measuable可衡量性\n\n有简单明显的指标衡量完成进度及效果\n\n3. Attainable可达到的\n\n目标不宜过于难，以免位居不前。\n\n4. Relevant相关性\n\n目标之间有相关性，这条对于此次目标制定用处不大。\n\n5. Time-bound时间截至期限\n\n有明确的截至日期，其实这和原则2有部分重复\n\n## 个人年度目标\n\n鉴于自己的严重拖延症及极差的执行力，尽量把目标定低一些，以便达到。\n\n### 总目标\n\n1. 技术类书籍平均每天3页，一周20页，两个月写一篇读书笔记。\n\n2. 一周一篇博客。\n\n3. 每天利用Evernote记录自己做的事情，并尝试总结改进。\n\n### 4月份目标\n\n1. 即日起（19日）至月底月度完毕《Effictive C++》前两个章节。\n\n2. 整理现有的博客内容，写博客一篇。\n\n","slug":"Target","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eynj0002uwfhdd3f6wx9"},{"title":"Scrapy","date":"2015-01-25T09:16:25.000Z","_content":"\n### Scrapy简介\n\nScrapy是使用Python编写的一个通用的爬虫框架。\n\n基于Twisted的异步编程框架，大幅提高了爬取效率。\n\nScrapy想来目前应该是我阅读源代码最多的开源项目了。在这个项目上，我学习到了yeild关键词，各种类的应用，接触到了一直想学习的Twisted框架。\n\n代码看起来挺简洁的，因此。\n\nScrapy 0.24.0版本的包结构有大幅改变，与之前的旧版本完全不兼容。\n\n#### Scrapy框架\n\nScrapy的框架比较难以理解，这跟\n\n### Scrapy改进\n\n#### Html解析\n\nScrapy提供了lxml的相关解析器。但是使用更好的是BeautifulSoup，虽然解析速度会便慢。\n\n#### 使用Bloom过滤器\n\n默认的网址过滤器(爬虫中的Visited表)是将一个url映射到MD5实现的。使用场景\n\n#### 利用redis构建分布式爬虫\n\n目前还没有使用过这个技术，但是其实原理非常简单，把爬虫队列存储到Redis的列表中，利用Redis的分布式数据存储功能来实现分布式队列，这样就能够在不大动Scrapy的情况下进行分布式爬取。说句实话这个思路真得很赞！\n\n","source":"_posts/Scrapy.md","raw":"title: Scrapy\ndate: 2015-01-25 17:16:25\ntags:\n---\n\n### Scrapy简介\n\nScrapy是使用Python编写的一个通用的爬虫框架。\n\n基于Twisted的异步编程框架，大幅提高了爬取效率。\n\nScrapy想来目前应该是我阅读源代码最多的开源项目了。在这个项目上，我学习到了yeild关键词，各种类的应用，接触到了一直想学习的Twisted框架。\n\n代码看起来挺简洁的，因此。\n\nScrapy 0.24.0版本的包结构有大幅改变，与之前的旧版本完全不兼容。\n\n#### Scrapy框架\n\nScrapy的框架比较难以理解，这跟\n\n### Scrapy改进\n\n#### Html解析\n\nScrapy提供了lxml的相关解析器。但是使用更好的是BeautifulSoup，虽然解析速度会便慢。\n\n#### 使用Bloom过滤器\n\n默认的网址过滤器(爬虫中的Visited表)是将一个url映射到MD5实现的。使用场景\n\n#### 利用redis构建分布式爬虫\n\n目前还没有使用过这个技术，但是其实原理非常简单，把爬虫队列存储到Redis的列表中，利用Redis的分布式数据存储功能来实现分布式队列，这样就能够在不大动Scrapy的情况下进行分布式爬取。说句实话这个思路真得很赞！\n\n","slug":"Scrapy","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eynm0003uwfhnqht15r9"},{"title":"搭建Cuckoo沙盒测试环境","date":"2015-04-25T08:34:13.000Z","_content":"\nCuckoo是一款用于自动化分析恶意样本的沙箱软件。相比其他沙箱软件，Cuckoo具备强大的监控功能，能够自动将程序提交到指定的虚拟机中，并依据格式运行，同时会Hook相关的函数接口，记录下的重要的函数调用、网络访问。Cuckoo基于Python编写，通过在此基础上进行修改，可以避免重复开发，增加所需要的特殊功能。\n\n网站https://malwr.com/可以认为是一个在线版的Cuckoo，国内也样相关的在线样本行为分析网站[火眼](https://fireeye.ijinshan.com/)和[文件B超](https://www.b-chao.com)，个人怀疑他们也是在Cuckoo的基础上进行修改的。\n\n本文的主要内容是在Linux系统上安装Cuckoo。\n\n## 安装过程\n\n### 1. 基本运行环境\n\n* Python\n\n安装Python并根据requirements.txt中的列表直接安装所需要的python模块。\n\n* MongoDB\n\n如果想使用基于Django的网页接口，则需要安装MongoDB\n\n* 各个虚拟机的接口库\n\nKVM、XenServer的API接口\n\n### 2. 功能软件\n\n#### 安装Yara\n\nYara是一款用于识别和分类恶意样本的开源工具，可以理解为是一款特征匹配工具。\n\nYara默认没有编译对cuckoo和magic的支持，在编译时需要加上`./configure --enable-cuckoo --enable-magic`选项。\n\n安装yara-python库，使得cuckoo能够调用yara。\n\n#### 安装ssdeep\n\nssdeep能够计算一个文件的模糊哈希代码，通过计算不同样本之间的ssdeep差值，可以判断两个样本是否相近。\n\n#### Tcpdump\n\n用于截获数据。\n\n#### 安装cuckoo\n\ncuckoo居然没有在ArchLinux的软件包中，这是很神奇的一件事，所以必须手动Github下载，并且手动更新。\n\n`git clone git@github.com:cuckoobox/cuckoo.git`\n\n### 3. 可选软件\n\n### Volatility\n\n这是一款分析内存dumps的工具。\n\n### 4. 安装虚拟机\n\nCuckoo支持多种虚拟机，官方推荐使用的是VirutalBox虚拟机（应该是因为开源的缘故），其他的还支持VMware、XenServer、ESX、KVM等虚拟机（参考modules/machinery目录），个人处于使用惯性，选择了使用VMware。\n\n虚拟机内安装基本操作系统，取消防火墙，并安装Python运行环境，然后运行agent/agent.py，使得虚拟机处于等待接收参数和处理任务状态，并对此状态保存快照。\n\n## 配置\n\n#### cuckoo.conf\n\n## 使用\n\n-d参数可以显示更多的内容。\n\n\n","source":"_posts/Sandbox.md","raw":"title: \"搭建Cuckoo沙盒测试环境\"\ndate: 2015-04-25 16:34:13\ntags:\n---\n\nCuckoo是一款用于自动化分析恶意样本的沙箱软件。相比其他沙箱软件，Cuckoo具备强大的监控功能，能够自动将程序提交到指定的虚拟机中，并依据格式运行，同时会Hook相关的函数接口，记录下的重要的函数调用、网络访问。Cuckoo基于Python编写，通过在此基础上进行修改，可以避免重复开发，增加所需要的特殊功能。\n\n网站https://malwr.com/可以认为是一个在线版的Cuckoo，国内也样相关的在线样本行为分析网站[火眼](https://fireeye.ijinshan.com/)和[文件B超](https://www.b-chao.com)，个人怀疑他们也是在Cuckoo的基础上进行修改的。\n\n本文的主要内容是在Linux系统上安装Cuckoo。\n\n## 安装过程\n\n### 1. 基本运行环境\n\n* Python\n\n安装Python并根据requirements.txt中的列表直接安装所需要的python模块。\n\n* MongoDB\n\n如果想使用基于Django的网页接口，则需要安装MongoDB\n\n* 各个虚拟机的接口库\n\nKVM、XenServer的API接口\n\n### 2. 功能软件\n\n#### 安装Yara\n\nYara是一款用于识别和分类恶意样本的开源工具，可以理解为是一款特征匹配工具。\n\nYara默认没有编译对cuckoo和magic的支持，在编译时需要加上`./configure --enable-cuckoo --enable-magic`选项。\n\n安装yara-python库，使得cuckoo能够调用yara。\n\n#### 安装ssdeep\n\nssdeep能够计算一个文件的模糊哈希代码，通过计算不同样本之间的ssdeep差值，可以判断两个样本是否相近。\n\n#### Tcpdump\n\n用于截获数据。\n\n#### 安装cuckoo\n\ncuckoo居然没有在ArchLinux的软件包中，这是很神奇的一件事，所以必须手动Github下载，并且手动更新。\n\n`git clone git@github.com:cuckoobox/cuckoo.git`\n\n### 3. 可选软件\n\n### Volatility\n\n这是一款分析内存dumps的工具。\n\n### 4. 安装虚拟机\n\nCuckoo支持多种虚拟机，官方推荐使用的是VirutalBox虚拟机（应该是因为开源的缘故），其他的还支持VMware、XenServer、ESX、KVM等虚拟机（参考modules/machinery目录），个人处于使用惯性，选择了使用VMware。\n\n虚拟机内安装基本操作系统，取消防火墙，并安装Python运行环境，然后运行agent/agent.py，使得虚拟机处于等待接收参数和处理任务状态，并对此状态保存快照。\n\n## 配置\n\n#### cuckoo.conf\n\n## 使用\n\n-d参数可以显示更多的内容。\n\n\n","slug":"Sandbox","published":1,"updated":"2015-06-13T12:31:37.983Z","_id":"ciav0eynp0004uwfhs45x1t2z","comments":1,"layout":"post","photos":[],"link":""},{"title":"Node使用心得","date":"2014-12-07T08:49:58.000Z","_content":"\n## Node使用心得\n\n#### 更换NPM源\n\n使用[淘宝NPM源](http://npm.taobao.org/)，在使用过程中发现目录`~/.npm/.cache_cnpm/_locks/`是root权限创建的（估计是因为第一次是以root权限运行），在普通权限下使用cnpm时会报错，需要手动修改下。\n\n#### Bower使用\n\n#### Grunt使用\n\n#### bootstrap3-jade-node\n\n基于Grunt基础上，加上了Bootstrap3、Jade、Node模板配置\n\n安装命令：\n\n`npm install -g grunt-express-bootstrap`\n\n初始化库\n\n`grunt-express-bootstrap init`\n\n生成库\n\n```\nnpm install\nbower install\n```\n\n本地运行\n\n``\n\n\n","source":"_posts/Node-Start.md","raw":"title: Node使用心得\ndate: 2014-12-07 16:49:58\ntags:\n---\n\n## Node使用心得\n\n#### 更换NPM源\n\n使用[淘宝NPM源](http://npm.taobao.org/)，在使用过程中发现目录`~/.npm/.cache_cnpm/_locks/`是root权限创建的（估计是因为第一次是以root权限运行），在普通权限下使用cnpm时会报错，需要手动修改下。\n\n#### Bower使用\n\n#### Grunt使用\n\n#### bootstrap3-jade-node\n\n基于Grunt基础上，加上了Bootstrap3、Jade、Node模板配置\n\n安装命令：\n\n`npm install -g grunt-express-bootstrap`\n\n初始化库\n\n`grunt-express-bootstrap init`\n\n生成库\n\n```\nnpm install\nbower install\n```\n\n本地运行\n\n``\n\n\n","slug":"Node-Start","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eynr0005uwfhtrvbtohv"},{"title":"Node开发","date":"2014-12-12T07:26:22.000Z","_content":"\n\n本文的主要内容：使用Node Coffee-script开发一个网站\n\n#### Mongoose\n\n注意，Mongoose会对输入的Collection名字自动添加复数形式命名后存入到Mongodb中，例如user重命名为表users，具体的命名方法可以参考[Mongoose在创建Model时对Collection的命名策略](http://aiilive.blog.51cto.com/1925756/1405203)\n\n解决方法是在创建Model的时候传入第三个参数作为实际的表名\n\n在查询中，还发现在查询大量数据的时候会出现`Error: parseError occured`的错误提示，相关的错误可以参看[MongoDB parseError when using limit and sort](https://stackoverflow.com/questions/21767673/mongodb-parseerror-when-using-limit-and-sort)，大意是缺少索引，但是我明明已经添加了相关的索引的，不知道如何去解决，故改用Mongodb试下\n\n","source":"_posts/Node-Development.md","raw":"title: Node开发\ndate: 2014-12-12 15:26:22\ntags:\n---\n\n\n本文的主要内容：使用Node Coffee-script开发一个网站\n\n#### Mongoose\n\n注意，Mongoose会对输入的Collection名字自动添加复数形式命名后存入到Mongodb中，例如user重命名为表users，具体的命名方法可以参考[Mongoose在创建Model时对Collection的命名策略](http://aiilive.blog.51cto.com/1925756/1405203)\n\n解决方法是在创建Model的时候传入第三个参数作为实际的表名\n\n在查询中，还发现在查询大量数据的时候会出现`Error: parseError occured`的错误提示，相关的错误可以参看[MongoDB parseError when using limit and sort](https://stackoverflow.com/questions/21767673/mongodb-parseerror-when-using-limit-and-sort)，大意是缺少索引，但是我明明已经添加了相关的索引的，不知道如何去解决，故改用Mongodb试下\n\n","slug":"Node-Development","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eynu0006uwfhd1da43rq"},{"title":"使用Mactype渲染字体","date":"2015-03-15T05:27:48.000Z","_content":"\nMactype是在Windows下实现类似Mac下字体渲染效果的程序。长期以来，我一直都使用这个软件替代系统自带的ClearType渲染功能。渲染得到的字体相当不错。\n\n但是，\n\n\n## 字体\n\nWindows下面自带的雅黑字体效果还是挺不错的，但是还是建议使用其他修改过的字体。字体可以去[极限社区](http://bbs.themex.net/forumdisplay.php?f=90)下载。该论坛也是重要的讨论字体修改和Mactype的网站。\n\n之前用的比较多的是XHei，貌似现在出了新的字体，以后下载看下效果。\n\n## 程序优化\n\n### Firefox\n\nFirefox默认开启的硬件加速，因此无法直接使用Mactype字体渲染。关于具体的设置，参考文档[MacType.Source](https://github.com/renkun-ken/MacType.Source)\n\n打开`about:config`，修改设置如下\n\n| Key                                                      | Value |\n|----------------------------------------------------------|-------|\n| gfx.direct2d.disabled                                    | true  |\n| gfx.font_loader.delay                                    | -1    |\n| gfx.font_rendering.cleartype.always_use_for_content;true | true  |\n| gfx.font_rendering.cleartype_params.cleartype_level      | 100   |\n| gfx.font_rendering.cleartype_params.enhanced_contrast    | 100   |\n| gfx.font_rendering.cleartype_params.gamma                | 1400  |\n| gfx.font_rendering.cleartype_params.pixel_structure      | 1     |\n| gfx.font_rendering.cleartype_params.rendering_mode       | 5     |\n| gfx.font_rendering.fallback.always_use_cmaps             | true  |\n| gfx.use_text_smoothing_setting                           | true  |\n\n### VisualStudio\n\n与Firefox一样，同样使用了硬件加速，而且偏偏没有任何设置。\n\n在[VS 怎么使用 MacType 的字体渲染？](http://www.zhihu.com/question/24251313)中提出了解决方案：对于ClearType设置为Smoothing的字体，且Visualstudio在显示比例不为100%时可以直接通过Mactype进行渲染。\n\n所以需要使用这样特别制作的字体，从[自制FantasqueSansMono字体+VS缩放插件,完美解决VS2013+Mactype](http://tieba.baidu.com/p/3366845989)下载特别制作过的字体FantasqueSansMono字体。\n\n但是默认VS都会在新开一个窗口的时候重置缩放比例，因此需要使用插件让VS保持显示比较为99%。插件可以参考帖子[Visual Studio 2010 default zoom level](https://stackoverflow.com/questions/4771750/visual-studio-2010-default-zoom-level)，固定了显示比例之后，防止不小心按了`Ctrl+滚轮`而改变了缩放，可以安装插件[Disable Mouse Wheel Zoom](https://visualstudiogallery.msdn.microsoft.com/d088791c-150a-4834-8f28-462696a82bb8)，装上了这几个插件，基本可以欣赏漂亮的字体渲染了。\n","source":"_posts/Mactype.md","raw":"title: 使用Mactype渲染字体\ndate: 2015-03-15 13:27:48\ntags:\n---\n\nMactype是在Windows下实现类似Mac下字体渲染效果的程序。长期以来，我一直都使用这个软件替代系统自带的ClearType渲染功能。渲染得到的字体相当不错。\n\n但是，\n\n\n## 字体\n\nWindows下面自带的雅黑字体效果还是挺不错的，但是还是建议使用其他修改过的字体。字体可以去[极限社区](http://bbs.themex.net/forumdisplay.php?f=90)下载。该论坛也是重要的讨论字体修改和Mactype的网站。\n\n之前用的比较多的是XHei，貌似现在出了新的字体，以后下载看下效果。\n\n## 程序优化\n\n### Firefox\n\nFirefox默认开启的硬件加速，因此无法直接使用Mactype字体渲染。关于具体的设置，参考文档[MacType.Source](https://github.com/renkun-ken/MacType.Source)\n\n打开`about:config`，修改设置如下\n\n| Key                                                      | Value |\n|----------------------------------------------------------|-------|\n| gfx.direct2d.disabled                                    | true  |\n| gfx.font_loader.delay                                    | -1    |\n| gfx.font_rendering.cleartype.always_use_for_content;true | true  |\n| gfx.font_rendering.cleartype_params.cleartype_level      | 100   |\n| gfx.font_rendering.cleartype_params.enhanced_contrast    | 100   |\n| gfx.font_rendering.cleartype_params.gamma                | 1400  |\n| gfx.font_rendering.cleartype_params.pixel_structure      | 1     |\n| gfx.font_rendering.cleartype_params.rendering_mode       | 5     |\n| gfx.font_rendering.fallback.always_use_cmaps             | true  |\n| gfx.use_text_smoothing_setting                           | true  |\n\n### VisualStudio\n\n与Firefox一样，同样使用了硬件加速，而且偏偏没有任何设置。\n\n在[VS 怎么使用 MacType 的字体渲染？](http://www.zhihu.com/question/24251313)中提出了解决方案：对于ClearType设置为Smoothing的字体，且Visualstudio在显示比例不为100%时可以直接通过Mactype进行渲染。\n\n所以需要使用这样特别制作的字体，从[自制FantasqueSansMono字体+VS缩放插件,完美解决VS2013+Mactype](http://tieba.baidu.com/p/3366845989)下载特别制作过的字体FantasqueSansMono字体。\n\n但是默认VS都会在新开一个窗口的时候重置缩放比例，因此需要使用插件让VS保持显示比较为99%。插件可以参考帖子[Visual Studio 2010 default zoom level](https://stackoverflow.com/questions/4771750/visual-studio-2010-default-zoom-level)，固定了显示比例之后，防止不小心按了`Ctrl+滚轮`而改变了缩放，可以安装插件[Disable Mouse Wheel Zoom](https://visualstudiogallery.msdn.microsoft.com/d088791c-150a-4834-8f28-462696a82bb8)，装上了这几个插件，基本可以欣赏漂亮的字体渲染了。\n","slug":"Mactype","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eynw0007uwfhh0rwo1bv"},{"title":"Mac","date":"2015-02-15T05:03:43.000Z","_content":"\n### 起\n\n人生中第一台Macbook pro，终于在发完年终奖后、回家过年前到手了。\n\n是从苹果团买的，感觉顺丰陆运速度还算快。\n\n装在之前的电脑包里面，就显得电脑包得空间太大，需要买个内胆包才行。\n\n### 用\n\n首先要学习的是触摸板手势，有了这个真心不想用鼠标了，总算能够完全使用键盘（且算触摸板为键盘的一部分吧）\n\n键盘使用起来按键声音还好，比较清脆舒服，虽然键程不长，但是感觉还行吧。的确有必要换个外置键盘。\n\n字体看的真是舒服，终于不用在Win/Linux下面费尽心思的调整字体了。\n\n### 软件\n一大堆软件都不会用。\n\n#### 常用软件\n\n登陆AppStore，进免费排行榜，下载了QQ、搜狗输入**板**，其中搜狗输入**板**的功能是通过里面的入口安装搜狗输入法。\n安装Xcode，虽然目前一次都没有打开过。\n首先安装Homebrew，幸好最近在折腾Linuxbrew，很多操作都是一样的\n\n对于使用Homebrew安装的系统软件，如数据库等，根据提示，相关启动方法如下\n\n`\nTo have launchd start mongodb at login:\n    ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents\n    ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents\nThen to load mongodb now:\n    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist\n    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\nOr, if you don’t want/need launchctl, you can just run:\n    mongod --config /usr/local/etc/mongod.conf\n    redis-server /usr/local/etc/redis.conf\n`\n\n#### zsh\n\n具体参考Mactalk的这篇文章[终极shell](http://macshuo.com/?p=676)\n\n另外，在使用zsh的agnoster主题时，需要额外下载增强的字体，并在终端选择使用。\n","source":"_posts/Mac.md","raw":"title: Mac\ndate: 2015-02-15 13:03:43\ntags:\n---\n\n### 起\n\n人生中第一台Macbook pro，终于在发完年终奖后、回家过年前到手了。\n\n是从苹果团买的，感觉顺丰陆运速度还算快。\n\n装在之前的电脑包里面，就显得电脑包得空间太大，需要买个内胆包才行。\n\n### 用\n\n首先要学习的是触摸板手势，有了这个真心不想用鼠标了，总算能够完全使用键盘（且算触摸板为键盘的一部分吧）\n\n键盘使用起来按键声音还好，比较清脆舒服，虽然键程不长，但是感觉还行吧。的确有必要换个外置键盘。\n\n字体看的真是舒服，终于不用在Win/Linux下面费尽心思的调整字体了。\n\n### 软件\n一大堆软件都不会用。\n\n#### 常用软件\n\n登陆AppStore，进免费排行榜，下载了QQ、搜狗输入**板**，其中搜狗输入**板**的功能是通过里面的入口安装搜狗输入法。\n安装Xcode，虽然目前一次都没有打开过。\n首先安装Homebrew，幸好最近在折腾Linuxbrew，很多操作都是一样的\n\n对于使用Homebrew安装的系统软件，如数据库等，根据提示，相关启动方法如下\n\n`\nTo have launchd start mongodb at login:\n    ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents\n    ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents\nThen to load mongodb now:\n    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist\n    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\nOr, if you don’t want/need launchctl, you can just run:\n    mongod --config /usr/local/etc/mongod.conf\n    redis-server /usr/local/etc/redis.conf\n`\n\n#### zsh\n\n具体参考Mactalk的这篇文章[终极shell](http://macshuo.com/?p=676)\n\n另外，在使用zsh的agnoster主题时，需要额外下载增强的字体，并在终端选择使用。\n","slug":"Mac","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eyny0008uwfhmkrwuh2r"},{"title":"KaliLinux使用心得","date":"2015-04-12T11:33:10.000Z","_content":"\n## Kali Linux\n\nKali是一个专门用来进行安全审计（渗透测试）的操作系统，是著名的Backtrack的后继者，由同一组开发人员开发的。Kali基于Debian系统，加入了大量的安全工具。\n\n## 基本配置\n\n### 安装Linux Brew\n\n### 允许使用PPA库\n\n参考网页[Kali Linux add PPA repository add-apt-repository](http://www.blackmoreops.com/2014/02/21/kali-linux-add-ppa-repository-add-apt-repository/)\n\n## 一些常用软件\n\n### 安装Zsh、Terminator\n\n用于替换原有的bash、Gnome Terminal。\n\n### 安装VMware\n\nVmware Workstation的驱动对于不同的Linux内核版本都要进行一定的patch才能正常编译。基本上通过搜索能够获取最新需要修改的地方，然后重新打包后编译即可。\n","source":"_posts/KaliLinux.md","raw":"title: \"KaliLinux使用心得\"\ndate: 2015-04-12 19:33:10\ntags: [Linux]\n---\n\n## Kali Linux\n\nKali是一个专门用来进行安全审计（渗透测试）的操作系统，是著名的Backtrack的后继者，由同一组开发人员开发的。Kali基于Debian系统，加入了大量的安全工具。\n\n## 基本配置\n\n### 安装Linux Brew\n\n### 允许使用PPA库\n\n参考网页[Kali Linux add PPA repository add-apt-repository](http://www.blackmoreops.com/2014/02/21/kali-linux-add-ppa-repository-add-apt-repository/)\n\n## 一些常用软件\n\n### 安装Zsh、Terminator\n\n用于替换原有的bash、Gnome Terminal。\n\n### 安装VMware\n\nVmware Workstation的驱动对于不同的Linux内核版本都要进行一定的patch才能正常编译。基本上通过搜索能够获取最新需要修改的地方，然后重新打包后编译即可。\n","slug":"KaliLinux","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eyo20009uwfh7g4zt406"},{"title":"Arch Linux安装教程","date":"2014-11-22T14:29:33.000Z","_content":"\n## 缘起\n\n最早接触Arch Linux是在[@layerssss](https://github.com/layerssss/)推荐下使用的。相比于其他的Linux系统（之前曾经用Ubuntu、Backtrack/Kali Linux）而言，有以下的特点：\n\n- 软件版本较新：所有的软件都进行滚动更新，基本是最新版软件，而且有很多都直接是Git包。\n\n- 软件自定义安装：默认的系统是最精简的配置，不会有额外的东西。\n\n- 软件非常丰富：加上aur库，基本能够包含各种的软件了。\n\n这些优点也对应了一些缺点\n\n- 经常会出现最新软件依赖问题导致无法更新\n\n- 各种配置特别容易出错。\n\n## 安装过程\n\n之前安装过Kali Linux，但是因为添加了SSD硬盘，因此电脑的分区有所变化，需要将Windows安装到SSD上。之前的Kali Linux安装在机械硬盘上，分区分的也比较小，也就想趁此机会把分区调大一点，结果在调整/分区的时候直接出错，不得不重装。\n\n### 安装基本环境\n\n刻录一个Arch Linux启动U盘，然后引导进入后，主要参考[Wiki](https://wiki.archlinux.org/index.php/Beginners%27_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))来进行安装，安装步骤基本一致，需要注意的地方如下\n\n0. 通用恢复方案\n\n貌似Arch Linux的Grub2引导菜单中没有恢复模式（抱歉不知道另外一个是什么功能），一般情况下如果有问题可以通过Live CD/USB来启动，我一开始比较笨的方法就是启动Live CD后，然后arch-chroot到对应的路径，进行系统修改操作。也可以直接进恢复模式。\n\n1. Wifi连接\n\n安装过程中全程使用Wifi进行连接，直接使用`wifi-menu`进行每次的连接，但是安装完新系统后，还需要额外安装`dialog`和`wpa_supplicant`\n\n### 显卡驱动问题\n\n这是第一个大坑，因为我的笔记本显卡是9300M GS，目前已经[不再被官方支持](https://www.archlinux.org/news/nvidia-340xx-and-nvidia/)，需要安装nvidia-340xx包。这个修改是在10月份的才发生的，因此在对应的中文Wiki并没有修改过来，直接导致多次安装仍然出问题。\n\n安装的时候最好一开始就选择安装Nvidia的私有显卡驱动，而不安装Nouveau，虽然Wiki上有如何[切换Nouveau和Nvidia](https://wiki.archlinux.org/index.php/NVIDIA#Switching_between_NVIDIA_and_nouveau_drivers)，但是实际切换的时候没有成功。\n\n安装完毕后Xorg可以安装XTerm以测试Xorg和显卡驱动是否正常。\n\n### 分区挂载\n\nLive CD能够正常进行挂载NTFS分区，但是如果直接在Live CD中挂载后生成为fstab，则无法直接启动挂载\n\n需要安装[ntfs-3g](https://wiki.archlinux.org/index.php/NTFS-3G)，并利用其进行挂载，并手工修改对应的fstab文件\n\n### 字体渲染\n\nArch Linux的默认字体渲染极差，据说Linux上的字体渲染效果会好于Windows（显然不会好于MacType），但是需要相对复杂的调整，目前我也没有达到非常好的字体渲染效果。\n\n为了提升字体配置效果，首先要安装一些软件包，包括fontconfig-infinality。也有利用Ubuntu配置文件的一些包例如fontconfig-ubuntu-zh-cn（安装的时候密钥更新失败）。\n\n我的配置如下，Arch Linux默认没有生成字体配置文件，首先参考官方的[字体配置Wiki](https://wiki.archlinux.org/index.php/Font_Configuration_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29)，生成一个默认的配置文件。然后进入[在线字体配置](http://wenq.org/cloud/fcdesigner_local.html)选择一个合适的配置，我选择了DejaVu作为英文字体，文泉驿微米黑作为中文字体，\n\n## 总结\n\n以上是安装Archlinux的安装过程，记录了遇到的主要问题，希望再次安装Arch Linux时可以依靠这个来减少搜索的花费。当然，同时也仍然有很多问题没有解决。\n\n## 其他问题\n\n1. Arch Linux Wiki最近访问不稳定，时不时的无法访问。\n\n2. Arch Linux在时间较长后进入睡眠（或者休眠？）后会出现无法进入系统的情况。\n\n3. 字体渲染仍然要进一步优化。\n\n发现有一个网页[一条命令搞定Linux字体渲染——Ubuntu系发行版微软雅黑+宋体终极解决方案【原创推荐】 ](http://www.lulinux.com/archives/278)可以参考一下。\n\n## 更新\n\n#### [2015-01-03]\n\n更新系统时，遇到错误\n\n> 错误：无法准备事务处理 (无法满足依赖关系)\n> :: package-query: 要求 pacman<4.2\n\n后来参照文章[Archlinux 升级 pacman 时遇到的问题及其解决](http://www.cnblogs.com/ccpaging/p/4191592.html)解决\n","source":"_posts/Install-Arch-Linux.md","raw":"title: Arch Linux安装教程\ndate: 2014-11-22 22:29:33\ntags:\n---\n\n## 缘起\n\n最早接触Arch Linux是在[@layerssss](https://github.com/layerssss/)推荐下使用的。相比于其他的Linux系统（之前曾经用Ubuntu、Backtrack/Kali Linux）而言，有以下的特点：\n\n- 软件版本较新：所有的软件都进行滚动更新，基本是最新版软件，而且有很多都直接是Git包。\n\n- 软件自定义安装：默认的系统是最精简的配置，不会有额外的东西。\n\n- 软件非常丰富：加上aur库，基本能够包含各种的软件了。\n\n这些优点也对应了一些缺点\n\n- 经常会出现最新软件依赖问题导致无法更新\n\n- 各种配置特别容易出错。\n\n## 安装过程\n\n之前安装过Kali Linux，但是因为添加了SSD硬盘，因此电脑的分区有所变化，需要将Windows安装到SSD上。之前的Kali Linux安装在机械硬盘上，分区分的也比较小，也就想趁此机会把分区调大一点，结果在调整/分区的时候直接出错，不得不重装。\n\n### 安装基本环境\n\n刻录一个Arch Linux启动U盘，然后引导进入后，主要参考[Wiki](https://wiki.archlinux.org/index.php/Beginners%27_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87))来进行安装，安装步骤基本一致，需要注意的地方如下\n\n0. 通用恢复方案\n\n貌似Arch Linux的Grub2引导菜单中没有恢复模式（抱歉不知道另外一个是什么功能），一般情况下如果有问题可以通过Live CD/USB来启动，我一开始比较笨的方法就是启动Live CD后，然后arch-chroot到对应的路径，进行系统修改操作。也可以直接进恢复模式。\n\n1. Wifi连接\n\n安装过程中全程使用Wifi进行连接，直接使用`wifi-menu`进行每次的连接，但是安装完新系统后，还需要额外安装`dialog`和`wpa_supplicant`\n\n### 显卡驱动问题\n\n这是第一个大坑，因为我的笔记本显卡是9300M GS，目前已经[不再被官方支持](https://www.archlinux.org/news/nvidia-340xx-and-nvidia/)，需要安装nvidia-340xx包。这个修改是在10月份的才发生的，因此在对应的中文Wiki并没有修改过来，直接导致多次安装仍然出问题。\n\n安装的时候最好一开始就选择安装Nvidia的私有显卡驱动，而不安装Nouveau，虽然Wiki上有如何[切换Nouveau和Nvidia](https://wiki.archlinux.org/index.php/NVIDIA#Switching_between_NVIDIA_and_nouveau_drivers)，但是实际切换的时候没有成功。\n\n安装完毕后Xorg可以安装XTerm以测试Xorg和显卡驱动是否正常。\n\n### 分区挂载\n\nLive CD能够正常进行挂载NTFS分区，但是如果直接在Live CD中挂载后生成为fstab，则无法直接启动挂载\n\n需要安装[ntfs-3g](https://wiki.archlinux.org/index.php/NTFS-3G)，并利用其进行挂载，并手工修改对应的fstab文件\n\n### 字体渲染\n\nArch Linux的默认字体渲染极差，据说Linux上的字体渲染效果会好于Windows（显然不会好于MacType），但是需要相对复杂的调整，目前我也没有达到非常好的字体渲染效果。\n\n为了提升字体配置效果，首先要安装一些软件包，包括fontconfig-infinality。也有利用Ubuntu配置文件的一些包例如fontconfig-ubuntu-zh-cn（安装的时候密钥更新失败）。\n\n我的配置如下，Arch Linux默认没有生成字体配置文件，首先参考官方的[字体配置Wiki](https://wiki.archlinux.org/index.php/Font_Configuration_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29)，生成一个默认的配置文件。然后进入[在线字体配置](http://wenq.org/cloud/fcdesigner_local.html)选择一个合适的配置，我选择了DejaVu作为英文字体，文泉驿微米黑作为中文字体，\n\n## 总结\n\n以上是安装Archlinux的安装过程，记录了遇到的主要问题，希望再次安装Arch Linux时可以依靠这个来减少搜索的花费。当然，同时也仍然有很多问题没有解决。\n\n## 其他问题\n\n1. Arch Linux Wiki最近访问不稳定，时不时的无法访问。\n\n2. Arch Linux在时间较长后进入睡眠（或者休眠？）后会出现无法进入系统的情况。\n\n3. 字体渲染仍然要进一步优化。\n\n发现有一个网页[一条命令搞定Linux字体渲染——Ubuntu系发行版微软雅黑+宋体终极解决方案【原创推荐】 ](http://www.lulinux.com/archives/278)可以参考一下。\n\n## 更新\n\n#### [2015-01-03]\n\n更新系统时，遇到错误\n\n> 错误：无法准备事务处理 (无法满足依赖关系)\n> :: package-query: 要求 pacman<4.2\n\n后来参照文章[Archlinux 升级 pacman 时遇到的问题及其解决](http://www.cnblogs.com/ccpaging/p/4191592.html)解决\n","slug":"Install-Arch-Linux","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eyoa000cuwfhpo3dahgt"},{"title":"Hello World","date":"2014-11-20T14:19:23.000Z","_content":"\n这是我第二次使用github来发表博客。第一次的用户名暴露了太多，因此就使用了新的用户名:S0urceC0der，比较装逼吧，呵呵。\n\n## 为什么使用Github发表博客\n\n原因其实很简单，目前还没有心思打理一个主机，一般的博客网站编辑起来也比较麻烦，而Github提供了相当不错的静态网站访问功能。\n\n之前自己曾短暂的使用jekyll在Github上搭建博客，但是因为jekyll是Ruby写的，自己心里多多少少有所抵触，最终也没有坚持下来。而现在使用的Hexo，因为是Node写得，之前曾经使用过一阵，因此也比较亲切，看着各种主题也比较多，够酷够帅，也不用太折腾，就使用上了。\n\n写博客主要使用Markdown，一直以来都写的比较顺手，语法足够简单，真的是能够让人专注于内容写作，不用操心排版（虽然有时候要选择一个比较好的渲染邀请）。加上各种完美的字体与排版，比Word好多了，让人舒心。恐怕未来很长一段时间内，都是我写作的主要工具吧。\n\n我也会把以前的几篇文章，逐步转移到现在的这个博客上的，算是增加点内容吧。\n\n## 搭建Hexo\n\n### Github设置\n\n[Github Page](https://pages.github.com/)支持两种格式的静态页面:\n\n1. User Site: 仓库名称为username.github.io，其中username是你自己的用户名，主要用于个人的博客页面，页面数据存放在主干上。对应的访问页面就是http://username.github.io\n\n2. Project Site: 在指定的仓库下新建gh-pages分支存储页面，主要用于对某个项目的网页描述，对应的访问页面是http://username.github.io/repository\n\n当然，我的目标是个人博客，因此就新建了与用户名相同的个人仓库，并在主干上存放对应的静态页面文件。\n\n因为使用了Hexo生成静态页面，所以额外新建Source分支用于存储源代码（Hexo的工程），这样便可以在不同电脑随时随地检出进行修改，也实现了远程的文件备份。\n\n注意需要在本地的gitignore添加如下内容，以便不上传无用的文件内容：\n\n> public/       #Hexo生成的静态页面目录\n> node_modules/ #node模块安装目录\n\n### Git命令\n\n以下是创建仓库时的一些命令：\n\n`git config --global user.name 用户名`：设置用户名\n\n`git config --global user.email 邮箱`：设置邮箱\n\n`git branche source`：创建source分支\n\n`git checkout source`： 检出source分支\n\n`git checkout [file]`：回滚某个文件\n\n`git fetch origin`：升级仓库\n\n`git push origin source`或者`git push origin source:source`：将本地source分支推送到origin仓库的source分支中\n\n## 写作\n\n用Markdown语法写作，非常轻松\n\n### 添加照片\n\n将照片放到source/img文件夹内，然后使用 `![图片标题](/img/图片名称)`来显示\n\n### 额外功能\n\n除了标准的Markdown语法以外，还有新增了不少新的语法特性，这些语法特性，可以增强显示内容。\n\n## 博客发表\n\n`hexo n <title>`：发布博客\n\n`hexo g`：生成博客\n\n`hexo p`： 推送到github上\n\n## 2015-03-16更新\n\n昨天更新了一些软件，结果发现hexo生成的index.html是没有完全渲染过的，即仅包含ejs模板代码，几经搜索不知其解，便想着重装hexo，结果跑到官网一看，已经把包由`hexo`变成了`hexo-cli`，估计应该是版本升级有所变动。\n\n在重新安装完毕后，却又发现没有了之前的`clean deploy`等指令，重新新建了一个空的工程，对比了下package.json，才发现`hexo`的各种`generator`、`render`都已经剥离了，必须重新安装到当前目录下才行。最终，覆盖了原来的package.json，运行`cnpm install`之后，再次敲入`hexo`帮助，发现已经有了各种额外的指令。\n\n当一切都搞定后，才回过神来要去看下官网的[3.0 Changelog](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0)，的确在3.0版本中，更换了命令行，并进行了很多优化。文档中也提供了对应的[迁移指南](http://hexo.io/news/2015/03/05/hexo-3-0-released/#How_to_Update?)，自己还是过于懒惰不喜欢看文档，走了不该走的弯路。\n\n最后思考了下，认为这种做法的优点是：\n\n1. 框架与实现分离：剥离全局共用的指令（`-cli`库），`-cli`只提供最基本的功能，安装额外功能后，才具备额外功能。\n\n2. 实现在不同版本间的共存：只需要在package.json文件中指定具体版本即可。\n\n3. 减少了全局需要安装的内容\n\n## Todo\n\n<del>最好利用Github的教育优惠注册一个me域名</del>\n\n修改主题风格，添加一些插件等等\n","source":"_posts/Hello-World.md","raw":"title: Hello World\ndate: 2014-11-20 22:19:23\ntags:\n---\n\n这是我第二次使用github来发表博客。第一次的用户名暴露了太多，因此就使用了新的用户名:S0urceC0der，比较装逼吧，呵呵。\n\n## 为什么使用Github发表博客\n\n原因其实很简单，目前还没有心思打理一个主机，一般的博客网站编辑起来也比较麻烦，而Github提供了相当不错的静态网站访问功能。\n\n之前自己曾短暂的使用jekyll在Github上搭建博客，但是因为jekyll是Ruby写的，自己心里多多少少有所抵触，最终也没有坚持下来。而现在使用的Hexo，因为是Node写得，之前曾经使用过一阵，因此也比较亲切，看着各种主题也比较多，够酷够帅，也不用太折腾，就使用上了。\n\n写博客主要使用Markdown，一直以来都写的比较顺手，语法足够简单，真的是能够让人专注于内容写作，不用操心排版（虽然有时候要选择一个比较好的渲染邀请）。加上各种完美的字体与排版，比Word好多了，让人舒心。恐怕未来很长一段时间内，都是我写作的主要工具吧。\n\n我也会把以前的几篇文章，逐步转移到现在的这个博客上的，算是增加点内容吧。\n\n## 搭建Hexo\n\n### Github设置\n\n[Github Page](https://pages.github.com/)支持两种格式的静态页面:\n\n1. User Site: 仓库名称为username.github.io，其中username是你自己的用户名，主要用于个人的博客页面，页面数据存放在主干上。对应的访问页面就是http://username.github.io\n\n2. Project Site: 在指定的仓库下新建gh-pages分支存储页面，主要用于对某个项目的网页描述，对应的访问页面是http://username.github.io/repository\n\n当然，我的目标是个人博客，因此就新建了与用户名相同的个人仓库，并在主干上存放对应的静态页面文件。\n\n因为使用了Hexo生成静态页面，所以额外新建Source分支用于存储源代码（Hexo的工程），这样便可以在不同电脑随时随地检出进行修改，也实现了远程的文件备份。\n\n注意需要在本地的gitignore添加如下内容，以便不上传无用的文件内容：\n\n> public/       #Hexo生成的静态页面目录\n> node_modules/ #node模块安装目录\n\n### Git命令\n\n以下是创建仓库时的一些命令：\n\n`git config --global user.name 用户名`：设置用户名\n\n`git config --global user.email 邮箱`：设置邮箱\n\n`git branche source`：创建source分支\n\n`git checkout source`： 检出source分支\n\n`git checkout [file]`：回滚某个文件\n\n`git fetch origin`：升级仓库\n\n`git push origin source`或者`git push origin source:source`：将本地source分支推送到origin仓库的source分支中\n\n## 写作\n\n用Markdown语法写作，非常轻松\n\n### 添加照片\n\n将照片放到source/img文件夹内，然后使用 `![图片标题](/img/图片名称)`来显示\n\n### 额外功能\n\n除了标准的Markdown语法以外，还有新增了不少新的语法特性，这些语法特性，可以增强显示内容。\n\n## 博客发表\n\n`hexo n <title>`：发布博客\n\n`hexo g`：生成博客\n\n`hexo p`： 推送到github上\n\n## 2015-03-16更新\n\n昨天更新了一些软件，结果发现hexo生成的index.html是没有完全渲染过的，即仅包含ejs模板代码，几经搜索不知其解，便想着重装hexo，结果跑到官网一看，已经把包由`hexo`变成了`hexo-cli`，估计应该是版本升级有所变动。\n\n在重新安装完毕后，却又发现没有了之前的`clean deploy`等指令，重新新建了一个空的工程，对比了下package.json，才发现`hexo`的各种`generator`、`render`都已经剥离了，必须重新安装到当前目录下才行。最终，覆盖了原来的package.json，运行`cnpm install`之后，再次敲入`hexo`帮助，发现已经有了各种额外的指令。\n\n当一切都搞定后，才回过神来要去看下官网的[3.0 Changelog](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0)，的确在3.0版本中，更换了命令行，并进行了很多优化。文档中也提供了对应的[迁移指南](http://hexo.io/news/2015/03/05/hexo-3-0-released/#How_to_Update?)，自己还是过于懒惰不喜欢看文档，走了不该走的弯路。\n\n最后思考了下，认为这种做法的优点是：\n\n1. 框架与实现分离：剥离全局共用的指令（`-cli`库），`-cli`只提供最基本的功能，安装额外功能后，才具备额外功能。\n\n2. 实现在不同版本间的共存：只需要在package.json文件中指定具体版本即可。\n\n3. 减少了全局需要安装的内容\n\n## Todo\n\n<del>最好利用Github的教育优惠注册一个me域名</del>\n\n修改主题风格，添加一些插件等等\n","slug":"Hello-World","published":1,"updated":"2015-05-17T16:25:33.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eyoc000duwfh3y5h9m4a"},{"title":"Cuckoo代码学习一","date":"2015-06-13T12:18:40.000Z","_content":"\n## 虚拟机监控部分\n\nAgent\n\n主要功能：\n\n使用SimpleXMLRPCServer建立一个服务器监听Cuckoo发送的数据。\n\ndll注入\n\n使用了远程DLL注入技术，\n\n参考文档[远程DLL注入技术](http://www.programlife.net/remote-thread-dll-injection.html)\n\n监控\n","source":"_posts/Cuckoo-1.md","raw":"title: \"Cuckoo代码学习一\"\ndate: 2015-06-13 20:18:40\ntags:\n---\n\n## 虚拟机监控部分\n\nAgent\n\n主要功能：\n\n使用SimpleXMLRPCServer建立一个服务器监听Cuckoo发送的数据。\n\ndll注入\n\n使用了远程DLL注入技术，\n\n参考文档[远程DLL注入技术](http://www.programlife.net/remote-thread-dll-injection.html)\n\n监控\n","slug":"Cuckoo-1","published":1,"updated":"2015-06-13T12:45:07.932Z","_id":"ciav0eyog000euwfh07bx8m4h","comments":1,"layout":"post","photos":[],"link":""},{"title":"个人通用设置","date":"2015-05-24T10:17:25.000Z","_content":"\n## 系统基础设置\n\n### 字体\n\n利用MacType渲染字体，一直比较喜欢使用系统默认的雅黑字体，有人对雅黑字体进行了修改，将其和Consolas结合优化。作者时RobertLee，原文链接是[雅黑-Consolas混合字体，2008年5月22日更新~](http://www.cnblogs.com/RobertLee/archive/2006/12/25/602646.html)，貌似很少有贴作者信息的。\n\n## 常用软件\n\n### Total Commander\n\n文件夹命名使用\"数字+中文拼音首字母+中文描述\"，Ctrl+Q快速预览文件\n\n### CCleaner\n\n### Altrun/ALMRun\n\n快速启动软件，前者好长时间没有更新了，可以使用后者替代\n\n### Everything\n\n不解释\n\n### KeyTweak\n\n用于将CapsLock键和右Ctrl键交换，将Ctrl键放到更加容易接触到的位置。\n\n## 编辑工具\n\n### Vim\n\n使用spf-13配置，比较方便，虽然同时也会有很多坑，需要自己慢慢修改。但是插件无法后台运行，因此速度比较慢。\n\n### Notepad++\n\n用于替代记事本的轻量级编辑器\n\n### Sublime Text\n\n有Vim模式，运行速度相对VIM快，但是编码比较头疼，在Windows下面我会用来替代Vim\n\n## 编程工具\n\n### Visual Studio 2013\n\n基本设置：选择深色主题，开启多处理器编译，开启行号\n\n常用插件：\n\n* Visual Assist X: 不解释\n\n注：Visual Assist X最新版无法直接搜索到VC6的安装路径，需要在注册表中`HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\App Paths\\msdev.exe`指定实际路径。这有可能是绿色版导致的。\n\n参考http://tunps.com/newest-vax-support-on-vc-6\n\n* VsVim: 我是VIM党\n\n* Disable Mouse Wheel Zoom: 禁用滚轮缩放代码\n\n* TroutZoom: 固定代码缩放比率\n\n### Eclipse设置\n\n基本设置：开启行号\n\n常用插件：\n\n* Eclipse Color Theme: 配色很重要\n\n* viPlugin: 我是Vim党\n\n","source":"_posts/Common.md","raw":"title: \"个人通用设置\"\ndate: 2015-05-24 18:17:25\ntags:\n---\n\n## 系统基础设置\n\n### 字体\n\n利用MacType渲染字体，一直比较喜欢使用系统默认的雅黑字体，有人对雅黑字体进行了修改，将其和Consolas结合优化。作者时RobertLee，原文链接是[雅黑-Consolas混合字体，2008年5月22日更新~](http://www.cnblogs.com/RobertLee/archive/2006/12/25/602646.html)，貌似很少有贴作者信息的。\n\n## 常用软件\n\n### Total Commander\n\n文件夹命名使用\"数字+中文拼音首字母+中文描述\"，Ctrl+Q快速预览文件\n\n### CCleaner\n\n### Altrun/ALMRun\n\n快速启动软件，前者好长时间没有更新了，可以使用后者替代\n\n### Everything\n\n不解释\n\n### KeyTweak\n\n用于将CapsLock键和右Ctrl键交换，将Ctrl键放到更加容易接触到的位置。\n\n## 编辑工具\n\n### Vim\n\n使用spf-13配置，比较方便，虽然同时也会有很多坑，需要自己慢慢修改。但是插件无法后台运行，因此速度比较慢。\n\n### Notepad++\n\n用于替代记事本的轻量级编辑器\n\n### Sublime Text\n\n有Vim模式，运行速度相对VIM快，但是编码比较头疼，在Windows下面我会用来替代Vim\n\n## 编程工具\n\n### Visual Studio 2013\n\n基本设置：选择深色主题，开启多处理器编译，开启行号\n\n常用插件：\n\n* Visual Assist X: 不解释\n\n注：Visual Assist X最新版无法直接搜索到VC6的安装路径，需要在注册表中`HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\App Paths\\msdev.exe`指定实际路径。这有可能是绿色版导致的。\n\n参考http://tunps.com/newest-vax-support-on-vc-6\n\n* VsVim: 我是VIM党\n\n* Disable Mouse Wheel Zoom: 禁用滚轮缩放代码\n\n* TroutZoom: 固定代码缩放比率\n\n### Eclipse设置\n\n基本设置：开启行号\n\n常用插件：\n\n* Eclipse Color Theme: 配色很重要\n\n* viPlugin: 我是Vim党\n\n","slug":"Common","published":1,"updated":"2015-06-11T12:57:27.646Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciav0eyoi000fuwfhimcdcx2f"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciav0eyo20009uwfh7g4zt406","tag_id":"ciav0eyo4000auwfhbsrh2zkb","_id":"ciav0eyo8000buwfhm46cgyzg"}],"Tag":[{"name":"Linux","_id":"ciav0eyo4000auwfhbsrh2zkb"}]}}